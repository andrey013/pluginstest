{-# LANGUAGE NoMonomorphismRestriction
           #-}
module Plugins.Gallery.Gallery.Manual57 where
import Diagrams.Prelude

withCount = (# value (Sum 1))

-- c :: QDiagram Cairo R2 (Sum Int)
c = (   circle 5 # scaleX 2 # rotateBy (1/14) # withCount
     <> circle 2 # scaleX 5 # rotateBy (-4/14) # withCount
    )
    # lw 0.03

-- Generated by fair dice roll, guaranteed to be random
points = map p2 $
         [ (0.8936218079179525,6.501173563301563)
         , (0.33932828810065985,9.06458375044167)
         , (2.12546952534467,4.603130561299622)
         , (-8.036711369641125,6.741718165576458)
         , (-9.636495308950543,-8.960315063595772)
         , (-5.125008672475815,-4.196763141080737)
         , (-8.740284494124353,-1.748269759118557)
         , (-2.7303729625418782,-9.902752498164773)
         , (-1.6317121405154467,-6.026127282530069)
         , (-3.363167801871896,7.5571909081190825)
         , (5.109759075567126,-5.433154460042715)
         , (8.492015791125596,-9.813023637980223)
         , (7.762080919928849,8.340037921443582)
         , (-6.8589746952056885,3.9604472182691097)
         , (-0.6083773449063301,-3.7738202372565866)
         , (1.3444943726062775,1.1363744735717773)
         , (0.13720748480409384,8.718934659846127)
         , (-5.091010760515928,-8.887260649353266)
         , (-5.828490639105439,-9.392594425007701)
         , (0.7190148020163178,1.4832069771364331)
         ]

mkPoint p = (p, circle (case sample (c :: QDiagram NullBackend R2 (Sum Int)) p of
                          Sum n  -> 2 * fromIntegral n / 5 + 1/5)
                # fc black
            )

example = c # clearValue <> position (map mkPoint points)
